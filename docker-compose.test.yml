services:
  test-runner:
    build:
      context: .
      dockerfile: tests/Dockerfile
    volumes:
      - ./tests:/app/tests
      - ./ml:/app/ml
      - ./api:/app/api
      - ./webapp:/app/webapp
      - ./airflow/dags:/app/airflow/dags
      - test-results:/app/test-results
    environment:
      - PYTHONPATH=/app:/app/ml:/app/api:/app/webapp
      - AIRFLOW_HOME=/app/airflow
      - MYSQL_HOST=mysql
      - MYSQL_USER=plants_user
      - MYSQL_PASSWORD=plants123
      - MYSQL_DATABASE=plants
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin123
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - API_URL=http://api:8000
    depends_on:
      postgres:
        condition: service_healthy
      mysql:
        condition: service_healthy
      minio:
        condition: service_healthy
      api:
        condition: service_started
      mlflow:
        condition: service_started
    command: >
      bash -c "
      echo 'üß™ D√©marrage des tests dans Docker...' &&
      sleep 30 &&
      python -m pytest tests/ -v --tb=short --junitxml=/app/test-results/junit.xml --html=/app/test-results/report.html --self-contained-html
      "

  # Base de donn√©es PostgreSQL pour Airflow
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow123
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Base de donn√©es MySQL pour les donn√©es
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: plants
      MYSQL_USER: plants_user
      MYSQL_PASSWORD: plants123
    volumes:
      - ./tests/sql/init_test_db.sql:/docker-entrypoint-initdb.d/init_test_db.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  # MinIO pour le stockage S3
  minio:
    image: minio/minio:RELEASE.2025-04-03T14-56-28Z-cpuv1
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MLflow pour le tracking
  mlflow:
    image: python:3.10-slim
    command: >
      bash -c "pip install mlflow boto3 pymysql psycopg2-binary &&
               mlflow server --host 0.0.0.0 --port 5000
               --backend-store-uri mysql+pymysql://plants_user:plants123@mysql:3306/plants
               --default-artifact-root s3://mlflow/"
    environment:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin123
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    depends_on:
      mysql:
        condition: service_healthy
      minio:
        condition: service_healthy

  # API pour les tests d'int√©gration
  api:
    build:
      context: ./api
    environment:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin123
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      MLFLOW_TRACKING_URI: http://mlflow:5000
    depends_on:
      mlflow:
        condition: service_started
      minio:
        condition: service_healthy

volumes:
  test-results: